---
version: '2'
services:
  redpanda:
    image: vectorized/redpanda:v22.3.5
    container_name: redpanda
    ports:
      - "9092:9092"
      - "29092:29092"
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp
      - "1"
      - --memory
      - "1G"
      - --reserve-memory
      - "0M"
      - --node-id
      - "0"
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://redpanda:9092
      - --check=false

  console:
    image: vectorized/console:v2.1.1
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda
      - schema-registry
      - connect

  kafka-connect-ui:
    image: landoop/kafka-connect-ui
    hostname: ui
    container_name: ui
    links:
    - connect
    depends_on:
    - connect
    ports:
    - '8000:8000'
    environment:
      CONNECT_URL: http://connect:8083/

  minio:
    image: minio/minio:RELEASE.2022-12-07T00-56-37Z
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server --console-address ":9001" /data

  aws:
    image: amazon/aws-cli
    container_name: aws-cli
    command: -c "sleep 2 && aws --endpoint-url http://minio:9000 s3 mb s3://my-bucket --region eu-west-1 || exit 0"
    entrypoint: [/bin/bash]
    environment: 
      AWS_ACCESS_KEY_ID: "minioadmin"
      AWS_SECRET_ACCESS_KEY: "minioadmin"
    depends_on: 
      - minio
